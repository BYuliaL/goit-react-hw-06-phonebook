{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","dispatch","get","then","data","catch","error","message","name","number","contact","console","log","post","contactId","delete","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","map","alert","onSubmit","this","className","styles","form","form__label","form__input","type","onChange","pattern","title","required","form__button","Component","connect","contactsSelectors","contactsOperations","Contacts","onDeleteContact","id","contactsList","contactsList__button","onClick","prototype","PropTypes","arrayOf","shape","string","isRequired","e","currentTarget","App","fetchContacts","createReducer","_","payload","action","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactsReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,+BAA+B,qBAAuB,yC,mBCAvFD,EAAOC,QAAU,CAAC,OAAS,yB,uKCCdC,EAAuBC,YAClC,iCAEWC,EAAuBD,YAClC,iCAEWE,EAAqBF,YAAa,+BAElCG,EAAqBH,YAAa,+BAClCI,EAAqBJ,YAAa,+BAClCK,EAAmBL,YAAa,6BAEhCM,EAAwBN,YACnC,kCAEWO,EAAwBP,YACnC,kCAEWQ,EAAsBR,YAAa,gCAEnCS,EAAeT,YAAa,mBCTzCU,IAAMC,SAASC,QAAU,wBAEzB,IA+Be,EA/BO,kBAAM,SAAAC,GAC1BA,EAASd,KAETW,IACGI,IAAI,aACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAASZ,EAAqBe,OACjDC,OAAM,SAAAC,GAAK,OAAIL,EAASX,EAAmBgB,EAAMC,eAyBvC,EAtBK,SAACC,EAAMC,GAAP,OAAkB,SAAAR,GACpC,IAAMS,EAAU,CAAEF,OAAMC,UACxBE,QAAQC,IAAIF,GAEZT,EAASV,KAETO,IACGe,KAAK,YAAaH,GAClBP,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAAST,EAAmBY,OAC/CC,OAAM,SAAAC,GAAK,OAAIL,EAASR,EAAiBa,EAAMC,eAarC,EAVO,SAAAO,GAAS,OAAI,SAAAb,GACjCA,EAASP,KAETI,IACGiB,OADH,oBACuBD,IACpBX,MAAK,kBAAMF,EAASN,EAAsBmB,OAC1CT,OAAM,SAAAC,GAAK,OAAIL,EAASL,EAAoBU,EAAMC,e,QCxCjDS,EAAW,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACnCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAwB3B,GACbL,WACAI,YACAE,mBAdyBC,YACzB,CAACP,EAAUI,IACX,SAACF,EAAUG,GACT,IAAMG,EAAmBH,EAAOI,cAChC,OAAOP,EAASG,QAAO,qBAAGb,KACnBiB,cAAcC,SAASF,U,uBChB5BG,E,4MACJV,MAAQ,CACNT,KAAM,GACNC,OAAQ,I,EAGVmB,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRrB,EAAgBqB,EAAhBrB,KAAMsB,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBvB,EAAOsB,K,EAG1BE,aAAe,SAAAC,GACb,IAAQzB,EAAS,EAAKS,MAAdT,KAERyB,EAAMC,iBAEa,EAAKC,MAAMjB,SAC3BkB,KAAI,SAAA1B,GAAO,OAAIA,EAAQF,KAAKiB,iBAC5BC,SAASlB,EAAKiB,eAGfY,MAAM,SAAD,OAAU7B,EAAV,6BAEL,EAAK2B,MAAMG,SAAS,EAAKrB,OAE3B,EAAKc,SAAS,CAAEvB,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAM6B,SAAUC,KAAKP,aAAcQ,UAAWC,IAAOC,KAArD,UACE,wBAAOF,UAAWC,IAAOE,YAAzB,iBAEE,uBACA,uBACEH,UAAWC,IAAOG,YAClBC,KAAK,OACLf,MAAOS,KAAKtB,MAAMT,KAClBsC,SAAUP,KAAKX,aACfpB,KAAK,OACLuC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,uBACA,wBAAOT,UAAWC,IAAOE,YAAzB,mBAEE,uBACA,uBACEH,UAAWC,IAAOG,YAClBd,MAAOS,KAAKtB,MAAMR,OAClBqC,SAAUP,KAAKX,aACfiB,KAAK,MACLrC,KAAK,SACLuC,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,OAGZ,uBACA,wBAAQT,UAAWC,IAAOS,aAAcL,KAAK,SAA7C,gC,GA7DWM,aA8EJC,eATS,SAAAnC,GAAK,MAAK,CAChCC,SAAUmC,EAAkBrC,SAASC,OAGZ,SAAAhB,GAAQ,MAAK,CACtCqC,SAAU,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACRR,EAASqD,EAA+B9C,EAAMC,QAGnC2C,CAA6CzB,G,iCC9EtD4B,EAAW,SAAC,GAAmC,IAAjCrC,EAAgC,EAAhCA,SAAUsC,EAAsB,EAAtBA,gBAC5B,OACE,6BACGtC,EAASkB,KAAI,gBAAGqB,EAAH,EAAGA,GAAIjD,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAa+B,UAAWC,IAAOiB,aAA/B,UACGlD,EADH,KACWC,EACT,wBACE+B,UAAWC,IAAOkB,qBAClBd,KAAK,SACLe,QAAS,kBAAMJ,EAAgBC,IAHjC,sBAFOA,SAejBF,EAASM,UAAY,CACnB3C,SAAU4C,IAAUC,QAClBD,IAAUE,MAAM,CACdP,GAAIK,IAAUG,OAAOC,WACrB1D,KAAMsD,IAAUG,OAAOC,WACvBzD,OAAQqD,IAAUG,OAAOC,eAK/B,I,IAQed,eARS,SAAAnC,GAAK,MAAK,CAChCC,SAAUmC,EAAkB/B,mBAAmBL,OAGtB,SAAAhB,GAAQ,MAAK,CACtCuD,gBAAiB,SAAAC,GAAE,OAAIxD,EAASqD,EAAiCG,QAGpDL,CAA6CG,G,iBCf7CH,eARS,SAAAnC,GAAK,MAAK,CAChCa,MAAOuB,EAAkBjC,UAAUH,OAGV,SAAAhB,GAAQ,MAAK,CACtC6C,SAAU,SAAAqB,GAAC,OAAIlE,EAASJ,EAAasE,EAAEC,cAActC,YAGxCsB,EAtBA,SAAC,GAAyB,IAAvBtB,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACvB,OACE,wBAAON,UAAWC,IAAOpB,OAAzB,oCACyB,uBACvB,uBAAOwB,KAAK,OAAOf,MAAOA,EAAOgB,SAAUA,UCF3CuB,E,4MACJpD,MAAQ,G,uDAER,WACEsB,KAAKJ,MAAMmC,kB,oBAGb,WACE,OACE,gCACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAdUnB,aAwBHC,cAAQ,MAJI,SAAAnD,GAAQ,MAAK,CACtCqE,cAAe,kBAAMrE,EAASqD,SAGjBF,CAAkCiB,G,yCChB3ClD,GAAQoD,YAAc,IAAD,mBACxBlF,GAAuB,SAACmF,EAAD,YAAMC,WADL,cAExBjF,GAAqB,SAACyB,EAAOyD,GAAR,4BAAuBzD,GAAvB,CAA8ByD,EAAOD,aAFlC,cAGxB9E,GAAwB,SAACsB,EAAD,OAAUwD,EAAV,EAAUA,QAAV,OACvBxD,EAAMI,QAAO,qBAAGoC,KAAgBgB,QAJT,IAOrBpD,GAASkD,YAAc,GAAD,eACzB1E,GAAe,SAAC2E,EAAGE,GAAJ,OAAeA,EAAOD,YAGlCE,GAAUJ,aAAc,GAAD,mBAC1BpF,GAAuB,kBAAM,KADH,cAE1BE,GAAuB,kBAAM,KAFH,cAG1BC,GAAqB,kBAAM,KAHD,cAI1BC,GAAqB,kBAAM,KAJD,cAK1BC,GAAqB,kBAAM,KALD,cAM1BC,GAAmB,kBAAM,KANC,cAO1BC,GAAwB,kBAAM,KAPJ,cAQ1BC,GAAwB,kBAAM,KARJ,cAS1BC,GAAsB,kBAAM,KATF,IAYdgF,eAAgB,CAAEzD,SAAOE,UAAQsD,aCtB1CE,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAGIC,GAAcZ,YAAgB,CAClC1D,SAAUuE,KAWGC,GARDC,YAAe,CAC3BC,QAASJ,GACTX,cACAgB,UAAUC,I,YCxBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,U,kBCb1BlH,EAAOC,QAAU,CAAC,aAAe,2BAA2B,YAAc,6B","file":"static/js/main.c49dcbc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__Eot-t\",\"contactsList__button\":\"Contacts_contactsList__button__3gbC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__12TQM\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const changeFilter = createAction('contacts/filter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error.message)));\n};\n\nconst addContacts = (name, number) => dispatch => {\n  const contact = { name, number };\n  console.log(contact);\n\n  dispatch(addContactsRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch(error => dispatch(addContactsError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactsRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactsSuccess(contactId)))\n    .catch(error => dispatch(deleteContactsError(error.message)));\n};\n\n// eslint-disable-next-line\nexport default {\n  fetchContacts,\n  addContacts,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getItems = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\n// const getVisibleContacts = state => {\n//   const filter = getFilter(state);\n//   const contacts = getItems(state);\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// МЕМОИЗАЦИЯ\n\nconst getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line\nexport default {\n  getItems,\n  getFilter,\n  getVisibleContacts,\n};\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    const { name } = this.state;\n\n    event.preventDefault();\n\n    const inputValue = this.props.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (inputValue) {\n      alert(`Name '${name}' is already in contacts`);\n    } else {\n      this.props.onSubmit(this.state);\n    }\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.form__label}>\n          Name\n          <br />\n          <input\n            className={styles.form__input}\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <br />\n        <label className={styles.form__label}>\n          Namber\n          <br />\n          <input\n            className={styles.form__input}\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <br />\n        <button className={styles.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsOperations.addContacts(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './Contacts.module.css';\n\nconst Contacts = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactsList}>\n          {name}, {number}\n          <button\n            className={styles.contactsList__button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.filter}>\n      Find contacts by name: <br />\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport { contactsOperations } from './redux/contacts';\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nexport default combineReducers({ items, filter, loading });\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n// eslint-disable-next-line\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__button\":\"Form_form__button__39fjz\",\"form__label\":\"Form_form__label__xGInr\"};"],"sourceRoot":""}