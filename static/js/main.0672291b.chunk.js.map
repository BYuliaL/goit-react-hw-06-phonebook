{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","actions","addContacts","createAction","name","number","payload","id","shortid","generate","deleteContacts","changeFilter","Form","state","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","contacts","map","contact","toLowerCase","includes","alert","onSubmit","this","className","styles","form","form__label","form__input","type","onChange","pattern","title","required","form__button","Component","connect","items","dispatch","contactsActions","Contacts","onDeleteContact","contactsList","contactsList__button","onClick","prototype","PropTypes","arrayOf","shape","string","isRequired","allContacts","filter","normalizedFilter","getVisibleContacts","e","currentTarget","App","createReducer","action","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0672291b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__Eot-t\",\"contactsList__button\":\"Contacts_contactsList__button__3gbC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__12TQM\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContacts = createAction('contact/add', (name, number) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\nconst deleteContacts = createAction('contact/delete');\nconst changeFilter = createAction('contacts/filter');\n\n// const addContacts = (name, number) => ({\n//   type: types.ADD_CONTACT,\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   },\n// });\n\n// const deleteContacts = contactId => ({\n//   type: types.DELETE_CONTACT,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: types.FILTER_CONTACTS,\n//   payload: value,\n// });\n\nconst actions = {\n  addContacts,\n  deleteContacts,\n  changeFilter,\n};\n\nexport default actions;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport styles from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    const { name } = this.state;\n\n    event.preventDefault();\n\n    const inputValue = this.props.contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (inputValue) {\n      alert(`Name '${name}' is already in contacts`);\n    } else {\n      this.props.onSubmit(this.state);\n    }\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.form__label}>\n          Name\n          <br />\n          <input\n            className={styles.form__input}\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <br />\n        <label className={styles.form__label}>\n          Namber\n          <br />\n          <input\n            className={styles.form__input}\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <br />\n        <button className={styles.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsActions.addContacts(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport styles from './Contacts.module.css';\n\nconst Contacts = ({ contacts, onDeleteContact = () => null }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactsList}>\n          {name}, {number}\n          <button\n            className={styles.contactsList__button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.filter}>\n      Find contacts by name: <br />\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\n\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </div>\n    );\n  }\n}\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContacts]: (state, action) => [action.payload, ...state],\n  [actions.deleteContacts]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD_CONTACT:\n//       return [...state, payload];\n\n//     case types.DELETE_CONTACT:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER_CONTACTS:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({ items, filter });\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__button\":\"Form_form__button__39fjz\",\"form__label\":\"Form_form__label__xGInr\"};"],"sourceRoot":""}